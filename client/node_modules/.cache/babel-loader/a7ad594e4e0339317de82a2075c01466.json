{"ast":null,"code":"import _objectSpread from\"/Users/williamkapsalis/Desktop/Repos/MERN/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from'react';import{BrowserRouter as Router,Switch,Route}from'react-router-dom';import{ApolloClient,InMemoryCache,ApolloProvider,createHttpLink}from'@apollo/client';import{setContext}from'@apollo/client/link/context';import SearchBooks from'./pages/SearchBooks';import SavedBooks from'./pages/SavedBooks';import Navbar from'./components/Navbar';// Construct our main GraphQL API endpoint\nvar httpLink=createHttpLink({uri:'/graphql'});// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nvar authLink=setContext(function(_,_ref){var headers=_ref.headers;// get the authentication token from local storage if it exists\nvar token=localStorage.getItem('id_token');// return the headers to the context so httpLink can read them\nreturn{headers:_objectSpread(_objectSpread({},headers),{},{authorization:token?\"Bearer \".concat(token):''})};});var client=new ApolloClient({// Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\nlink:authLink.concat(httpLink),cache:new InMemoryCache()});function App(){return/*#__PURE__*/React.createElement(ApolloProvider,{client:client},/*#__PURE__*/React.createElement(Router,null,/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Navbar,null),/*#__PURE__*/React.createElement(Switch,null,/*#__PURE__*/React.createElement(Route,{exact:true,path:\"/\",component:SearchBooks}),/*#__PURE__*/React.createElement(Route,{exact:true,path:\"/saved\",component:SavedBooks}),/*#__PURE__*/React.createElement(Route,{render:function render(){return/*#__PURE__*/React.createElement(\"h1\",{className:\"display-2\"},\"Wrong page!\");}})))));}export default App;","map":{"version":3,"names":["React","BrowserRouter","Router","Switch","Route","ApolloClient","InMemoryCache","ApolloProvider","createHttpLink","setContext","SearchBooks","SavedBooks","Navbar","httpLink","uri","authLink","_","headers","token","localStorage","getItem","authorization","client","link","concat","cache","App"],"sources":["/Users/williamkapsalis/Desktop/Repos/MERN/client/src/App.js"],"sourcesContent":["import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport SearchBooks from './pages/SearchBooks';\nimport SavedBooks from './pages/SavedBooks';\nimport Navbar from './components/Navbar';\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <>\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={SearchBooks} />\n            <Route exact path=\"/saved\" component={SavedBooks} />\n            <Route render={() => <h1 className=\"display-2\">Wrong page!</h1>} />\n          </Switch>\n        </>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n"],"mappings":"sKAAA,MAAOA,MAAK,KAAM,OAAO,CACzB,OAASC,aAAa,GAAIC,OAAM,CAAEC,MAAM,CAAEC,KAAK,KAAQ,kBAAkB,CACzE,OACEC,YAAY,CACZC,aAAa,CACbC,cAAc,CACdC,cAAc,KACT,gBAAgB,CACvB,OAASC,UAAU,KAAQ,6BAA6B,CAExD,MAAOC,YAAW,KAAM,qBAAqB,CAC7C,MAAOC,WAAU,KAAM,oBAAoB,CAC3C,MAAOC,OAAM,KAAM,qBAAqB,CAExC;AACA,GAAMC,SAAQ,CAAGL,cAAc,CAAC,CAC9BM,GAAG,CAAE,UACP,CAAC,CAAC,CAEF;AACA,GAAMC,SAAQ,CAAGN,UAAU,CAAC,SAACO,CAAC,MAAkB,IAAdC,QAAO,MAAPA,OAAO,CACvC;AACA,GAAMC,MAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAC9C;AACA,MAAO,CACLH,OAAO,gCACFA,OAAO,MACVI,aAAa,CAAEH,KAAK,kBAAaA,KAAK,EAAK,EAAE,EAEjD,CAAC,CACH,CAAC,CAAC,CAEF,GAAMI,OAAM,CAAG,GAAIjB,aAAY,CAAC,CAC9B;AACAkB,IAAI,CAAER,QAAQ,CAACS,MAAM,CAACX,QAAQ,CAAC,CAC/BY,KAAK,CAAE,GAAInB,cAAa,EAC1B,CAAC,CAAC,CAEF,QAASoB,IAAG,EAAG,CACb,mBACE,oBAAC,cAAc,EAAC,MAAM,CAAEJ,MAAO,eAC7B,oBAAC,MAAM,mBACL,qDACE,oBAAC,MAAM,MAAG,cACV,oBAAC,MAAM,mBACL,oBAAC,KAAK,EAAC,KAAK,MAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAEZ,WAAY,EAAG,cAChD,oBAAC,KAAK,EAAC,KAAK,MAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAEC,UAAW,EAAG,cACpD,oBAAC,KAAK,EAAC,MAAM,CAAE,qCAAM,0BAAI,SAAS,CAAC,WAAW,EAAC,aAAW,CAAK,EAAC,EAAG,CAC5D,CACR,CACI,CACM,CAErB,CAEA,cAAee,IAAG"},"metadata":{},"sourceType":"module"}