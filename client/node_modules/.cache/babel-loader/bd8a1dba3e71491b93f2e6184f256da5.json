{"ast":null,"code":"var _jsxFileName = \"/Users/williamkapsalis/Desktop/Repos/MERN/client/src/pages/SearchBooks.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Jumbotron, Container, Col, Form, Button, Card, CardColumns } from 'react-bootstrap';\nimport { useMutation } from '@apollo/client';\nimport { SAVE_BOOK } from '../utils/mutations';\nimport { saveBookIds, getSavedBookIds } from '../utils/localStorage';\nimport Auth from '../utils/auth';\nconst SearchBooks = () => {\n  // create state for holding returned google api data\n  const [searchedBooks, setSearchedBooks] = useState([]);\n  // create state for holding our search field data\n  const [searchInput, setSearchInput] = useState('');\n\n  // create state to hold saved bookId values\n  const [savedBookIds, setSavedBookIds] = useState(getSavedBookIds());\n  const [saveBook, {\n    error\n  }] = useMutation(SAVE_BOOK);\n\n  // set up useEffect hook to save `savedBookIds` list to localStorage on component unmount\n  // learn more here: https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup\n  useEffect(() => {\n    return () => saveBookIds(savedBookIds);\n  });\n\n  // create method to search for books and set state on form submit\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    if (!searchInput) {\n      return false;\n    }\n    try {\n      const response = await fetch(`https://www.googleapis.com/books/v1/volumes?q=${searchInput}`);\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n      const {\n        items\n      } = await response.json();\n      const bookData = items.map(book => {\n        var _book$volumeInfo$imag;\n        return {\n          bookId: book.id,\n          authors: book.volumeInfo.authors || ['No author to display'],\n          title: book.volumeInfo.title,\n          description: book.volumeInfo.description,\n          image: ((_book$volumeInfo$imag = book.volumeInfo.imageLinks) === null || _book$volumeInfo$imag === void 0 ? void 0 : _book$volumeInfo$imag.thumbnail) || ''\n        };\n      });\n      setSearchedBooks(bookData);\n      setSearchInput('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // create function to handle saving a book to our database\n  const handleSaveBook = async bookId => {\n    // find the book in `searchedBooks` state by the matching id\n    const bookToSave = searchedBooks.find(book => book.bookId === bookId);\n\n    // get token\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n    if (!token) {\n      return false;\n    }\n    try {\n      const {\n        data\n      } = await saveBook({\n        variables: {\n          bookData: {\n            ...bookToSave\n          }\n        }\n      });\n      console.log(savedBookIds);\n      setSavedBookIds([...savedBookIds, bookToSave.bookId]);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Jumbotron, {\n    fluid: true,\n    className: \"text-light bg-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \"Search for Books!\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"searchInput\",\n    value: searchInput,\n    onChange: e => setSearchInput(e.target.value),\n    type: \"text\",\n    size: \"lg\",\n    placeholder: \"Search for a book\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"success\",\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, \"Submit Search\")))))), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, searchedBooks.length ? `Viewing ${searchedBooks.length} results:` : 'Search for a book to begin'), /*#__PURE__*/React.createElement(CardColumns, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, searchedBooks.map(book => {\n    return /*#__PURE__*/React.createElement(Card, {\n      key: book.bookId,\n      border: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }\n    }, book.image ? /*#__PURE__*/React.createElement(Card.Img, {\n      src: book.image,\n      alt: `The cover for ${book.title}`,\n      variant: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 19\n      }\n    }) : null, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 19\n      }\n    }, book.title), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 19\n      }\n    }, \"Authors: \", book.authors), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 19\n      }\n    }, book.description), Auth.loggedIn() && /*#__PURE__*/React.createElement(Button, {\n      disabled: savedBookIds === null || savedBookIds === void 0 ? void 0 : savedBookIds.some(savedId => savedId === book.bookId),\n      className: \"btn-block btn-info\",\n      onClick: () => handleSaveBook(book.bookId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }\n    }, (savedBookIds === null || savedBookIds === void 0 ? void 0 : savedBookIds.some(savedId => savedId === book.bookId)) ? 'Book Already Saved!' : 'Save This Book!')));\n  }))));\n};\nexport default SearchBooks;","map":{"version":3,"names":["React","useState","useEffect","Jumbotron","Container","Col","Form","Button","Card","CardColumns","useMutation","SAVE_BOOK","saveBookIds","getSavedBookIds","Auth","SearchBooks","searchedBooks","setSearchedBooks","searchInput","setSearchInput","savedBookIds","setSavedBookIds","saveBook","error","handleFormSubmit","event","preventDefault","response","fetch","ok","Error","items","json","bookData","map","book","bookId","id","authors","volumeInfo","title","description","image","imageLinks","thumbnail","err","console","handleSaveBook","bookToSave","find","token","loggedIn","getToken","data","variables","log","e","target","value","length","some","savedId"],"sources":["/Users/williamkapsalis/Desktop/Repos/MERN/client/src/pages/SearchBooks.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Jumbotron,\n  Container,\n  Col,\n  Form,\n  Button,\n  Card,\n  CardColumns,\n} from 'react-bootstrap';\n\nimport { useMutation } from '@apollo/client';\nimport { SAVE_BOOK } from '../utils/mutations';\nimport { saveBookIds, getSavedBookIds } from '../utils/localStorage';\n\nimport Auth from '../utils/auth';\n\nconst SearchBooks = () => {\n  // create state for holding returned google api data\n  const [searchedBooks, setSearchedBooks] = useState([]);\n  // create state for holding our search field data\n  const [searchInput, setSearchInput] = useState('');\n\n  // create state to hold saved bookId values\n  const [savedBookIds, setSavedBookIds] = useState(getSavedBookIds());\n\n  const [saveBook, { error }] = useMutation(SAVE_BOOK);\n\n  // set up useEffect hook to save `savedBookIds` list to localStorage on component unmount\n  // learn more here: https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup\n  useEffect(() => {\n    return () => saveBookIds(savedBookIds);\n  });\n\n  // create method to search for books and set state on form submit\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!searchInput) {\n      return false;\n    }\n\n    try {\n      const response = await fetch(\n        `https://www.googleapis.com/books/v1/volumes?q=${searchInput}`\n      );\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      const { items } = await response.json();\n\n      const bookData = items.map((book) => ({\n        bookId: book.id,\n        authors: book.volumeInfo.authors || ['No author to display'],\n        title: book.volumeInfo.title,\n        description: book.volumeInfo.description,\n        image: book.volumeInfo.imageLinks?.thumbnail || '',\n      }));\n\n      setSearchedBooks(bookData);\n      setSearchInput('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // create function to handle saving a book to our database\n  const handleSaveBook = async (bookId) => {\n    // find the book in `searchedBooks` state by the matching id\n    const bookToSave = searchedBooks.find((book) => book.bookId === bookId);\n\n    // get token\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const { data } = await saveBook({\n        variables: { bookData: { ...bookToSave } },\n      });\n      console.log(savedBookIds);\n      setSavedBookIds([...savedBookIds, bookToSave.bookId]);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return (\n    <>\n      <Jumbotron fluid className=\"text-light bg-dark\">\n        <Container>\n          <h1>Search for Books!</h1>\n          <Form onSubmit={handleFormSubmit}>\n            <Form.Row>\n              <Col xs={12} md={8}>\n                <Form.Control\n                  name=\"searchInput\"\n                  value={searchInput}\n                  onChange={(e) => setSearchInput(e.target.value)}\n                  type=\"text\"\n                  size=\"lg\"\n                  placeholder=\"Search for a book\"\n                />\n              </Col>\n              <Col xs={12} md={4}>\n                <Button type=\"submit\" variant=\"success\" size=\"lg\">\n                  Submit Search\n                </Button>\n              </Col>\n            </Form.Row>\n          </Form>\n        </Container>\n      </Jumbotron>\n\n      <Container>\n        <h2>\n          {searchedBooks.length\n            ? `Viewing ${searchedBooks.length} results:`\n            : 'Search for a book to begin'}\n        </h2>\n        <CardColumns>\n          {searchedBooks.map((book) => {\n            return (\n              <Card key={book.bookId} border=\"dark\">\n                {book.image ? (\n                  <Card.Img\n                    src={book.image}\n                    alt={`The cover for ${book.title}`}\n                    variant=\"top\"\n                  />\n                ) : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className=\"small\">Authors: {book.authors}</p>\n                  <Card.Text>{book.description}</Card.Text>\n                  {Auth.loggedIn() && (\n                    <Button\n                      disabled={savedBookIds?.some(\n                        (savedId) => savedId === book.bookId\n                      )}\n                      className=\"btn-block btn-info\"\n                      onClick={() => handleSaveBook(book.bookId)}\n                    >\n                      {savedBookIds?.some((savedId) => savedId === book.bookId)\n                        ? 'Book Already Saved!'\n                        : 'Save This Book!'}\n                    </Button>\n                  )}\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SearchBooks;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}